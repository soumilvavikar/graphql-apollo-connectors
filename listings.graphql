extend schema
   @link(url: "https://specs.apollo.dev/federation/v2.10", import: ["@key"])
   @link(
     url: "https://specs.apollo.dev/connect/v0.1"
     import: ["@source", "@connect"]
   )
   @source(name: "v1"
  http: { baseURL: "https://rt-airlock-services-listing.herokuapp.com/" })

type Query {
  "A curated array of listings to feature on the homepage"
  featuredListings: [Listing!]!
  @connect(
      source: "v1"
      http: { GET: "/featured-listings" }
      selection: """
      id
      title
      numOfBeds
      costPerNight
      closed : closedForBookings
      """
    )

  listing(id: ID!): Listing
  @connect(
    source: "v1"
    http: { GET: "/listings/{$args.id}" }
    selection: """
    id
    title
    numOfBeds
    costPerNight
    closed: closedForBookings
    amenities {
      id
      category
      name
    }
    """
  )
}

type Mutation {
  createListing(input: CreateListingInput!): CreateListingResponse
  @connect(
  source: "v1"
  http: {
    POST: "/listings"
    body: """
    listing:
      $args.input {
        title
        numOfBeds
        costPerNight
      }
    """
  }
  selection: """
  listing: {
    id
    title
    numOfBeds
    costPerNight
    closed: closedForBookings
  }
  """
  )
}

input CreateListingInput {
  title: String!
  numOfBeds: Int!
  costPerNight: Float!
}

type CreateListingResponse {
  listing: Listing
}

"A particular intergalactic location available for booking"
type Listing {
  id: ID!
  "The listing's title"
  title: String!
    "The number of beds available"
  numOfBeds: Int
  "The cost per night"
  costPerNight: Float
  "Indicates whether listing is closed for bookings (on hiatus)"
  closed: Boolean
  "The amenities available for this listing"
  amenities: [Amenity!]!
    @connect(
      source: "v1"
      http: { GET: "/listings/{$this.id}/amenities" }
      selection: """
      id
      name
      category
      """
    )
}

type Amenity {
  id: ID!
  "The amenity category the amenity belongs to"
  category: String!
  "The amenity's name"
  name: String!
}